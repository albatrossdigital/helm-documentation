"use strict";function itemOrParents(item,mlid,excludeRoot){var mlids=item.plids.concat([item.mlid]);return excludeRoot?_.contains(_.reject(mlids,function(plid){return plid==item.rootMlid}),mlid):_.contains(mlids,mlid)}angular.module("app",["drupalService","app.menu","ui.router","metaInfo","ngSanitize","ngAnimate","ngTouch","scrollTo","scrollSpy","angular-inview"]).run(["$rootScope","$state","$stateParams","metaInfo","$window","$location",function($rootScope,$state,$stateParams,metaInfo,$window,$location){$rootScope.apiUrl=Drupal.settings.helm_documentation.api_path,$rootScope.menuName=Drupal.settings.helm_documentation.menu_name,$rootScope.pagePath=Drupal.settings.helm_documentation.page_path,$rootScope.scrollToCurrent=function(){$rootScope.scrollTo($stateParams.mlid+"/"+$stateParams.childmlid,58)}}]).directive("menuClick",function($window,$browser){return{restrict:"A",scope:{menuClick:"@menuClick"},link:function($scope,$element,$attrs){$element.on("click",function(event){return $scope.menuClick&&"force-close"!=$scope.menuClick?jQuery(".helm-docs-wrapper").toggleClass("show-nav"):jQuery(".helm-docs-wrapper").removeClass("show-nav"),$scope.menuClick&&"return-false"==$scope.menuClick?(event.stopPropagation(),!1):void 0})}}}),angular.module("scrollTo",[]).run(["$rootScope",function($rootScope){$rootScope.scrollTo=function(eID,offset){function currentYPosition(){return window.pageYOffset?window.pageYOffset:document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop?document.body.scrollTop:0}function elmYPosition(eID){if(eID){var elm=document.getElementById(eID);if(elm){for(var y=elm.offsetTop,node=elm;node.offsetParent&&node.offsetParent!=document.body;)node=node.offsetParent,y+=node.offsetTop;return y}}return null}var i,startY=currentYPosition(),stopY=elmYPosition(eID);if(stopY){stopY=offset?stopY-offset:stopY;var distance=stopY>startY?stopY-startY:startY-stopY;if(100>distance)return void scrollTo(0,stopY);var speed=Math.round(distance/100);speed>=10&&(speed=10);var step=Math.round(distance/25),leapY=stopY>startY?startY+step:startY-step,timer=0;if(stopY>startY){for(i=startY;stopY>i;i+=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY+=step,leapY>stopY&&(leapY=stopY),timer++;return}for(i=startY;i>stopY;i-=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY-=step,stopY>leapY&&(leapY=stopY),timer++}}}]).directive("anchorScroll",function($rootScope,$timeout,$location){return{restrict:"A",link:function($scope,$element,$attrs){$timeout(function(){$rootScope.scrollToCurrent()})}}}),angular.module("scrollSpy",[]).directive("scrollSpy",function($window){return{restrict:"A",link:function(scope,elem,attrs){function maxHeight(){$nav.css({"max-height":$window.innerHeight-180+"px"})}var $body=jQuery("body"),$elem=jQuery(elem),$nav=$elem.children("ul"),scrolled=!1;jQuery($window).on("resize",function(){maxHeight()}),jQuery($window).scroll(function(){$elem.offset().top-($window.scrollY+80)<=0?scrolled||($body.addClass("docs-sidebar-scroll"),scrolled=!0):scrolled&&($body.removeClass("docs-sidebar-scroll"),scrolled=!1)}),maxHeight()}}}),angular.module("app.menu",["ui.router"]).config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.when("","/menu").when("/","/menu"),$stateProvider.state("menu",{url:"/menu",resolve:{links:function($stateParams,$filter,MenuLink){return MenuLink.query().$promise.then(function(data){function recurseList(localLinks,plids,rootMlid,expanded){angular.forEach(localLinks,function(item,key){item.rootMlid=rootMlid;var newRoot=rootMlid?rootMlid:item.mlid;if(item.plids=plids,item.showExpanded=expanded,item.url.match(/^https?:\/\//)?item.externalSite=!0:(item.externalSite=!1,item.url=window.location.origin+item.url),item.nid||(item.nid="m"+item.mlid,item.nonNode=!0),item.has_children&&parseInt(item.has_children)){var childPlids=plids.concat([item.mlid]),children=$filter("filter")(data.list,{plid:item.mlid});item.children=_.pluck(children,"mlid"),list.push(item),recurseList(children,childPlids,newRoot,parseInt(item.expanded))}else list.children=[],list.push(item)})}var list=[];return recurseList($filter("filter")(data.list,{depth:1}),[],0,1),list})}},templateUrl:"views/menu/home.html",controller:function($scope,$rootScope,$state,$filter,$location,links){$scope.links=links,$state.params&&$state.params.mlid?$rootScope.activeLink=$state.params.mlid:($rootScope.activeLink=links[0].mlid,$state.go("menu.section",{mlid:$scope.activeLink})),$scope.activeSections=function(menuItem){if($rootScope.inView){var value=itemOrParents($rootScope.inView,menuItem.mlid,!0);return value}return!1},$rootScope.changeSection=function(mlid,stateGo){$rootScope.activeLink!=mlid&&($rootScope.activeLink=mlid,stateGo&&$state.go("menu.section",{mlid:$rootScope.activeLink}))},$scope.menuLinkClick=function(item){return parseInt(item.external)?window.location.replace(item.url):$state.go("menu.section.child",{mlid:$rootScope.activeLink,childmlid:item.mlid})}}}).state("menu.section",{url:"/:mlid",template:"<ui-view/>",resolve:{nodes:function($stateParams,$filter,Node,links){var nids=_.pluck(_.filter(links,function(item){return itemOrParents(item,$stateParams.mlid)}),"nid");return Node.query({"nid[]":nids}).$promise.then(function(data){return _.transform(links,function(result,item,key){_.contains(nids,item.nid)&&(item.node=$filter("filter")(data.list,{nid:item.nid})[0],result.push(item))})})}},controller:function($scope,$rootScope,$filter,$state,links,nodes){var childmlid,normalRun=!0,stateGo=!1;if(nodes.length>1&&$state.params&&(!$state.params.childmlid||$state.params.childmlid&&$state.params.mlid==$state.params.childmlid)){var possibleChild=_.transform(nodes,function(result,item,key){return item.mlid==$state.params.mlid||item.nonNode?void 0:(result.push(item),!1)});possibleChild&&possibleChild.length&&(childmlid=possibleChild[0].mlid,normalRun=!1,stateGo=!0)}normalRun&&($state.params&&$state.params.childmlid||(childmlid=_.filter(nodes,function(item){return item.node&&item.node.body&&item.node.body.value})[0].mlid,stateGo=!0)),$rootScope.changeSection($state.params.mlid),stateGo&&$state.go("menu.section.child",{mlid:$state.params.mlid,childmlid:childmlid})}}).state("menu.section.child",{url:"/:childmlid",templateUrl:"views/menu/section.html",controller:function($scope,$sce,$rootScope,$filter,$state,$window,links,nodes){$scope.mlid=$state.params.mlid,$scope.links=links,$scope.windowHeight=$window.innerHeight-85,nodes[0].expanded=1,parseInt(nodes[0].expanded)?$scope.nodes=nodes:$scope.nodes=_.filter(nodes,function(item){return item.mlid==$state.params.childmlid?($rootScope.inView=item,!0):itemOrParents(item,$state.params.childmlid)}),$scope.inViewScroll=function(menuItem){$rootScope.inView=menuItem},$scope.trustedBody=function(node){return $sce.trustAsHtml(node.node.body.value)}}})}]),angular.module("metaInfo",[]).provider("metaInfo",function(){var baseTitle="",title="",baseMetaDescription="",metaDescription="",baseMetaKeywords="",metaKeywords="";this.setBaseTitle=function(newTitle){baseTitle=newTitle},this.setBaseDescription=function(description){baseMetaDescription=description},this.setBaseKeywords=function(keywords){baseMetaKeywords=keywords},this.$get=function(){return{title:function(){return title.length?title+" | "+baseTitle:baseTitle},setTitle:function(newTitle){title=newTitle},metaDescription:function(){return metaDescription.length?metaDescription:baseMetaDescription},metaKeywords:function(){return metaKeywords.length?metaKeywords:baseMetaKeywords},setMetaDescription:function(newMetaDescription){metaDescription=newMetaDescription},setMetaKeywords:function(newKeywords,append){var keywords="";for(var key in newKeywords)keywords+=", "+newKeywords[key].name;metaKeywords="undefined"!=typeof append&&append?baseMetaKeywords+keywords:keywords},resetAll:function(){title="",metaDescription="",metaKeywords=""}}}}),angular.module("drupalService",["ngResource"]).factory("Node",["$resource","$rootScope",function($resource,$rootScope){return $resource($rootScope.apiUrl+"/node/:nid.json",{nid:"@nid"},{get:{method:"GET",transformRequest:function(data,headersGetter){headersGetter().Accept="application/json"},cache:!0},query:{method:"GET",transformRequest:function(data,headersGetter){headersGetter().Accept="application/json"},cache:!0,isArray:!1}})}]).factory("MenuLink",["$resource","$rootScope",function($resource,$rootScope){return $resource($rootScope.apiUrl+"/menu_link.json",{menu_name:$rootScope.menuName},{query:{method:"GET",transformRequest:function(data,headersGetter){headersGetter().Accept="application/json"},cache:!0,isArray:!1}})}]).factory("View",["$resource","$rootScope",function($resource,$rootScope){return $resource($rootScope.apiUrl+"/rest/:entity/:bundle/:a/:b/:c",{entityType:"@entity",name:"@bundle",a:"@arg0"},{query:{method:"GET",cache:!0,isArray:!0}})}]).factory("TaxonomyTerm",["$resource","$rootScope",function($resource,$rootScope){return $resource($rootScope.apiUrl+"/taxonomy_term/:tid",{vocabulary:"@vocabulary"},{get:{method:"GET",transformRequest:function(data,headersGetter){headersGetter().Accept="application/json"},cache:!0,isArray:!1},query:{method:"GET",transformRequest:function(data,headersGetter){headersGetter().Accept="application/json"},cache:!0,isArray:!1}})}]).factory("TaxonomyTermIndex",["$resource","$rootScope",function($resource,$rootScope){return $resource($rootScope.apiUrl+"taxonomy_term?vocabulary&sort=weight&direction=ASC",{vocabulary:"@vocabulary"},{query:{method:"GET",transformRequest:function(data,headersGetter){headersGetter().Accept="application/json"},cache:!0,isArray:!1}})}]).factory("TaxonomyTermNodes",["$resource","$rootScope",function($resource,$rootScope){return $resource($rootScope.apiUrl+"/taxonomy_term_nodes",{tid:"@tid"},{})}]).factory("User",["$resource","$rootScope",function($resource,$rootScope){return $resource($rootScope.apiUrl+"/user/:uid",{uid:"@uid"},{})}]).factory("Comment",["$resource","$rootScope",function($resource,$rootScope){return $resource($rootScope.apiUrl+"/node/:nid/comments",{nid:"@nid"},{post:{method:"POST",url:"/entity/comment"}})}]).factory("viewsFactory",["View",function(View){var service={};return service.pageLoad=function($scope,params){if(!$scope.loadingPage&&void 0!=$scope.items&&$scope.items.length>0){$scope.currentPage++;var newData=View.query(params,function(){newData.length>0&&(Array.prototype.push.apply($scope.items,newData),$scope.loadingPage=!1)})}$scope.loadingPage=!0},service}]).directive("openReveal",function(){return{restrict:"A",scope:{openReveal:"@"},link:function($scope,$element,$attrs){$element.on("click",function(){jQuery("#"+$scope.openReveal).foundation("reveal","open")})}}}),angular.module("metaInfo").controller("metaInfoCtrl",["$scope","metaInfo",function($scope,metaInfo){$scope.pageTitle=function(){return metaInfo.title()},$scope.metaDescription=function(){return metaInfo.metaDescription()},$scope.metaKeywords=function(){return metaInfo.metaKeywords()}}]);