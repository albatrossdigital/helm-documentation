<?php
/**
 * @file
 * Code for the Playfab Documentation module.
 */

/**
 * Implements hook_menu().g
 */
function helm_documentation_menu() {
  $items['docs'] = array(
    'title' => 'Documentation',
    'description' => 'Playfab Documentation',
    'page callback' => 'helm_documentation_callback',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


/**
 * Returns the path to the JS app.
 */
function helm_documentation_app_path() {
  return drupal_get_path('module', 'helm_documentation') .'/js/helm-documentation-app/dist/';
}

/**
 * Implements hook_library().
 */
function helm_documentation_library() {
  $path = helm_documentation_app_path();
  $js_settings = array('scope' => 'footer', 'weight' => 5);
  $libraries['helm-documentation-app'] = array(
    'title' => 'helm-documentation-app',
    'website' => 'http://albatrossdigital.com',
    'version' => '0.1',
    'js' => array(
      $path . 'js/angular.min.js' => $js_settings,
      $path . 'js/libraries.min.js' => $js_settings,
      $path . 'js/app.min.js' => $js_settings,
      drupal_get_path('module', 'helm_documentation') . '/js/helm-documentation.js' => $js_settings,
    ),
    // 'css' => array(
    //   $path . 'css/app.min.css' => array('weight' => 1),
    // ),
  );
  //dpm($libraries);
  return $libraries;
}


/**
 * Page callback
 */
//function helm_documentation_callback($subtype , $conf, $args, $contexts) {
function helm_documentation_callback() {
  global $user;
  if($user->uid || variable_get('helm_documentation_anon_access', FALSE)) {

    return theme('helm_documentation_app');// @todo: variables
  } 
  else {
    drupal_access_denied();
    drupal_exit();
  }
}


/**
 * Implements hook_theme().
 */
function helm_documentation_theme() {
  //$path = drupal_get_path('module', 'helm_documentation');
  return array(
    'helm_documentation_app' => array(
      'template' => 'templates/app',
      'variables' => array(
        'app_path' => url(helm_documentation_app_path()),
        'api_path' => url('<front>', array('absolute' => TRUE)),
      )
    ),
  );
}


/**
 * Implements hook_theme_preprocess().
 */
function template_preprocess_helm_documentation_app(&$variables) {
  drupal_add_library('helm_documentation', 'helm-documentation-app');
  $settings = array(
    'app_path' => $variables['app_path'],
    'api_path' => $variables['api_path'],
    'menu_name' => 'menu-docs-navigation-menu',
    'page_path' => url(current_path()),
  );
  drupal_add_js(array('helm_documentation' => $settings), 'setting');
}


/**
 * Implements hook_node_presave().
 * Add the lorem ipsum to the body.
 */
function helm_documentation_node_presave($node) {
  if (function_exists('curl_init') && $node->type == variable_get('liftoff_loremipsum_content_type', 'loremipsum')) {
    $uri = "http://api.chrisvalleskey.com/fillerama/get.php?count=100&format=json&show=" 
      . variable_get('liftoff_loremipsum_show', 'futurama');
    $response = drupal_http_request($uri);
    $json = drupal_json_decode($response->data);

    $header_level = variable_get('liftoff_loremipsum_header_level', 2);
    $lists = variable_get('liftoff_loremipsum_lists', TRUE);
    
    $i = 0;
    $j = 0;
    $output = _liftoff_loremipsum_paragraph($json, $i);
    $output .= $header_level ? _liftoff_loremipsum_header($header_level, $json, $j) : '';
    $output .= _liftoff_loremipsum_paragraph($json, $i);
    $output .= $lists ? _liftoff_loremipsum_header('ol', $json, $i) : '';
    $output .= _liftoff_loremipsum_paragraph($json, $i);
    $output .= $header_level ? _liftoff_loremipsum_header($header_level+1, $json, $j) : '';
    $output .= $lists ? _liftoff_loremipsum_header('ul', $json, $i) : '';
    $output .= _liftoff_loremipsum_paragraph($json, $i);

    $node->body[LANGUAGE_NONE][0]['value'] = $output;

    // @todo: media
    //function _liftoff_ui_save_file($url, $destination) {
  }
}


function _liftoff_loremipsum_paragraph($json, &$i) {
  $item = '';
  for ($k=$i; $k<$i+6; $k++) {
    $item .= $json['db'][$k]['quote'] .' ';
  }
  return '<p>' . $item . '</p>';
}

function _liftoff_loremipsum_list($tag, $json, &$i) {
  $item = '';
  for ($k=$i; $k<$i+6; $k++) {
    $item .= '<li>' . $json['db'][$k]['quote'] . '</li>';
  }
  return '<'.$tag.'>' . $item . '</'.$tag.'>';
}

function _liftoff_loremipsum_header($tag, $json, &$j) {
  $j++;
  $tag = 'h'.$tag;
  return '<'.$tag.'>' . $json['headers'][$j]['header'] . '</'.$tag.'>';
}

